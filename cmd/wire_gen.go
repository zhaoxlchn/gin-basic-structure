// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/zhaoxlchn/gin-basic-structure/internal/conf"
	"github.com/zhaoxlchn/gin-basic-structure/internal/controller"
	"github.com/zhaoxlchn/gin-basic-structure/internal/dao"
	"github.com/zhaoxlchn/gin-basic-structure/internal/data"
	"github.com/zhaoxlchn/gin-basic-structure/internal/router"
	"github.com/zhaoxlchn/gin-basic-structure/internal/server"
	"github.com/zhaoxlchn/gin-basic-structure/internal/service"
)

// Injectors from wire.go:

// wireApp init application.
func wireApp(serverConf *conf.Server, dbConf *conf.Database, redisConf *conf.Redis) (func() error, func(), error) {
	db, err := data.NewDb(dbConf)
	if err != nil {
		return nil, nil, err
	}
	client := data.NewRedis(redisConf)
	dataData, cleanup, err := data.NewData(db, client)
	if err != nil {
		return nil, nil, err
	}
	userDao := dao.NewUserDao(dataData)
	userService := service.NewUserService(userDao)
	index := controller.NewIndex(userService)
	apiRouter := router.NewApIRouter(index)
	engine := server.NewHTTPServer(apiRouter)
	v := newApp(serverConf, engine)
	return v, func() {
		cleanup()
	}, nil
}
